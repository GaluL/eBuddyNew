#pragma checksum "C:\eBuddyNew\eBuddyApp\Views\RunPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "6271A0DAED5DF0EEF1D35E243D1B1B15"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eBuddyApp.Views
{
    partial class RunPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Maps_MapControl_Center(global::Windows.UI.Xaml.Controls.Maps.MapControl obj, global::Windows.Devices.Geolocation.Geopoint value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.Devices.Geolocation.Geopoint) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.Devices.Geolocation.Geopoint), targetNullValue);
                }
                obj.Center = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private class RunPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IRunPage_Bindings
        {
            private global::eBuddyApp.Views.RunPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Button obj8;
            private global::Windows.UI.Xaml.Controls.Button obj9;
            private global::Windows.UI.Xaml.Controls.Maps.MapControl obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;

            private RunPage_obj1_BindingsTracking bindingsTracking;

            public RunPage_obj1_Bindings()
            {
                this.bindingsTracking = new RunPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Maps.MapControl)target;
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13:
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IRunPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::eBuddyApp.Views.RunPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::eBuddyApp.Views.RunPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::eBuddyApp.ViewModels.SoloRunViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_StartRun(obj.StartRun, phase);
                        this.Update_ViewModel_StopRun(obj.StopRun, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CurrentLocation(obj.CurrentLocation, phase);
                        this.Update_ViewModel_RunData(obj.RunData, phase);
                        this.Update_ViewModel_Heartrate(obj.Heartrate, phase);
                    }
                }
            }
            private void Update_ViewModel_StartRun(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj8, obj, null);
                }
            }
            private void Update_ViewModel_StopRun(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj9, obj, null);
                }
            }
            private void Update_ViewModel_CurrentLocation(global::Windows.Devices.Geolocation.Geopoint obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Maps_MapControl_Center(this.obj10, obj, null);
                }
            }
            private void Update_ViewModel_RunData(global::eBuddyApp.Models.RunItem obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_RunData(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_RunData_Distance(obj.Distance, phase);
                        this.Update_ViewModel_RunData_Time(obj.Time, phase);
                        this.Update_ViewModel_RunData_Speed(obj.Speed, phase);
                    }
                }
            }
            private void Update_ViewModel_RunData_Distance(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_RunData_Time(global::System.TimeSpan obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_RunData_Speed(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj.ToString(), null);
                }
            }
            private void Update_ViewModel_Heartrate(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj.ToString(), null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
            private class RunPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<RunPage_obj1_Bindings> WeakRefToBindingObj; 

                public RunPage_obj1_BindingsTracking(RunPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<RunPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_RunData(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RunPage_obj1_Bindings bindings;
                    if (WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::eBuddyApp.ViewModels.SoloRunViewModel obj = sender as global::eBuddyApp.ViewModels.SoloRunViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_CurrentLocation(obj.CurrentLocation, DATA_CHANGED);
                                bindings.Update_ViewModel_RunData(obj.RunData, DATA_CHANGED);
                                bindings.Update_ViewModel_Heartrate(obj.Heartrate, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentLocation":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentLocation(obj.CurrentLocation, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RunData":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_RunData(obj.RunData, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Heartrate":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Heartrate(obj.Heartrate, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::eBuddyApp.ViewModels.SoloRunViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::eBuddyApp.ViewModels.SoloRunViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_RunData(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    RunPage_obj1_Bindings bindings;
                    if (WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::eBuddyApp.Models.RunItem obj = sender as global::eBuddyApp.Models.RunItem;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_RunData_Distance(obj.Distance, DATA_CHANGED);
                                bindings.Update_ViewModel_RunData_Time(obj.Time, DATA_CHANGED);
                                bindings.Update_ViewModel_RunData_Speed(obj.Speed, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Distance":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_RunData_Distance(obj.Distance, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Time":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_RunData_Time(obj.Time, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Speed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_RunData_Speed(obj.Speed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::eBuddyApp.Models.RunItem cache_ViewModel_RunData = null;
                public void UpdateChildListeners_ViewModel_RunData(global::eBuddyApp.Models.RunItem obj)
                {
                    if (obj != cache_ViewModel_RunData)
                    {
                        if (cache_ViewModel_RunData != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_RunData).PropertyChanged -= PropertyChanged_ViewModel_RunData;
                            cache_ViewModel_RunData = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_RunData = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_RunData;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.ViewModel = (global::eBuddyApp.ViewModels.SoloRunViewModel)(target);
                }
                break;
            case 3:
                {
                    this.AdaptiveVisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 4:
                {
                    this.VisualStateNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5:
                {
                    this.VisualStateNormal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6:
                {
                    this.VisualStateWide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 7:
                {
                    this.pageHeader = (global::Template10.Controls.PageHeader)(target);
                }
                break;
            case 10:
                {
                    this.myMap = (global::Windows.UI.Xaml.Controls.Maps.MapControl)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    RunPage_obj1_Bindings bindings = new RunPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

